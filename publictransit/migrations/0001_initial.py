# Generated by Django 4.1.7 on 2023-04-13 19:14

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("latitude", models.DecimalField(decimal_places=5, max_digits=7)),
                ("longitude", models.DecimalField(decimal_places=5, max_digits=7)),
            ],
            options={
                "unique_together": {("latitude", "longitude")},
            },
        ),
        migrations.CreateModel(
            name="MapBoundary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("admin_level", models.IntegerField()),
                ("iso31662", models.CharField(max_length=128)),
                ("name", models.CharField(max_length=128)),
                ("osm_id", models.IntegerField()),
                ("ref_gss", models.CharField(max_length=128)),
            ],
            options={
                "verbose_name_plural": "MapBoundaries",
                "unique_together": {("osm_id",)},
            },
        ),
        migrations.CreateModel(
            name="Station",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("osm_id", models.IntegerField()),
                ("isin_boundary", models.BooleanField(default=True)),
                (
                    "boundary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="publictransit.mapboundary",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="publictransit.location",
                    ),
                ),
            ],
            options={
                "unique_together": {("osm_id", "boundary")},
            },
        ),
        migrations.CreateModel(
            name="BoundaryPoint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "boundary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="publictransit.mapboundary",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="publictransit.location",
                    ),
                ),
            ],
            options={
                "unique_together": {("boundary", "order")},
            },
        ),
    ]
